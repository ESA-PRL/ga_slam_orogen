name 'ga_slam'

using_library 'ga_slam'
using_library 'grid_map_cereal'
using_library 'pcl_common-1.7'

import_types_from 'base'

task_context 'Task' do
    needs_configuration

    ####### Properties #######
    property('mapSizeX', 'double', 10.0).
        doc 'X dimension of the map'

    property('mapSizeY', 'double', 10.0).
        doc 'Y dimension of the map'

    property('robotPositionX', 'double', 0.0).
        doc 'X position of the subject inside the map'

    property('robotPositionY', 'double', 0.0).
        doc 'Y position of the subject inside the map'

    property('mapResolution', 'double', 0.050).
        doc 'Resolution of each square cell of the map'

    property('voxelSize', 'double', 0.025).
        doc 'Dimension of each voxel of the point cloud'

    property('minElevation', 'double', -5.0).
        doc 'Minimum cutoff height of the voxelized point cloud'

    property('maxElevation', 'double', 5.0).
        doc 'Maximum cutoff height of the voxelized point cloud'

    ####### States #######
    reports 'INPUTS_NOT_ALIGNED'
    error_states 'TRANSFORM_NOT_FOUND',
        'INPUT_NOT_CONNECTED',
        'PARAMETERS_NOT_SET'

    ####### Input Ports #######
    input_port('cloud', '/base/samples/Pointcloud').
        doc 'Dense point cloud with timestamp in the sensor frame'

    input_port('poseGuess', '/base/samples/RigidBodyState').
        doc 'Pose estimation (6D) with covariance and timestamp'

    ####### Output Ports #######
    output_port('elevationMap', '/base/samples/DistanceImage').
        doc 'Robot-centric elevation map (2.5D space representation)'

    output_port('estimatedPose', '/base/samples/RigidBodyState').
        doc 'Corrected pose estimation (6D) with covariance and timestamp'

    ####### Debug Ports #######
    property('debugInfoEnabled', 'bool', false).
        doc 'Output debug information. This must be enabled for the' +
            'other debug properties to have an effect'

    property('rawMapDebugEnabled', 'bool', false).
        doc 'Output the raw elevation map'

    property('cloudDebugEnabled', 'bool', false).
        doc 'Output processed point cloud and map point cloud'

    property('serializationDebugEnabled', 'bool', false).
        doc 'Serialize the raw map and save it to disk'

    property('saveMapPath', '/std/string', '/tmp/ga_slam_map.cereal').
        doc 'Path to save the serialized elevation map'

    property('savePosePath', '/std/string', '/tmp/ga_slam_pose.cereal').
        doc 'Path to save the serialized pose'

    output_port('rawElevationMap', '/base/samples/DistanceImage').
        doc 'Elevation map prior to the neighborhood fusion step'

    output_port('processedCloud', '/base/samples/Pointcloud').
        doc 'Processed point cloud in the map frame'

    output_port('mapCloud', '/base/samples/Pointcloud').
        doc 'Point cloud in the map frame created from the raw map'

    ####### Transformer #######
    transformer do
        transform 'slamSensor', 'body'
        transform 'body', 'ground'
        align_port 'cloud'
        max_latency 0
    end

    port_driven 'cloud'
end

